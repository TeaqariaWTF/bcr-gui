.virtual-scroll-viewport {
  height: 100%;

  ::ng-deep .cdk-virtual-scroll-content-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--item-gap);
    padding: 2px;
  }

}

.toolbar-menu-items {
  ion-icon {
    margin-right: .5em;
    color: unset;
  }
}

.main-content {
  position: relative;
  // make room for virtual-scrollbar
  --padding-start: 1em;
  --padding-end: 0;
}

.content-wrapper {
  display: grid;
  grid-template-columns: minmax(0, 1fr) min-content;
  grid-template-rows: minmax(0, 1fr);
  height: 100%;
}

.title {
  font-size: 14pt;
  line-height: 16pt;
  gap: 1em;
  display: grid;
  grid-template-columns: minmax(0, 1fr) min-content;
}

.title,
.subtitle {
  color: RGB(var(--ion-text-color-rgb));
}

.call-direction-icon {
  height: 16pt;
  width: 16pt;
  min-height: 16pt;
  min-width: 16pt;
}

.items {
  padding: 0;
  margin: 0;
  background: var(--ion-background-color);

  .item {
    margin: 0;
    height: var(--item-height);
    display: grid;
    grid-template-columns: min-content minmax(0, 1fr);
    align-items: center;
    border: 1px solid var(--item-border-color);
    border-radius: .8em;
    // box-shadow: 0 0 .2em var(--item-shadow-color);

    .op-name {
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 1;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &.selected {
      min-height: var(--item-height-selected);
      height: unset;
      border-color: var(--item-border-color-selected);
      box-shadow: inset 0 0 .4em var(--item-shadow-color-selected);
      .op-name {
        -webkit-line-clamp: 4;
      }
    }

    .checkbox {
      margin-left: 1em;
    }

    .content {
      display: flex;
      flex-direction: column;
      gap: 1em;
    }

    .player {
      border-radius: .6em;
    }

    .actions {
      display: flex;
      gap: 1.25em;
      justify-content: flex-end;
    }

    .action {
      font-size: 2em;
      line-height: 2em;
    }
  }
}

.icon-button-waiting {
  opacity: .4;
  pointer-events: none;
  animation-name: spin;
  animation-duration: 3000ms;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

@keyframes spin {
  from { transform:rotate(0deg); }
  to   { transform:rotate(360deg); }
}
